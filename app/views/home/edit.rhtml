<% title "Edit page" %>

<% form_for @user ,:url => {:controller=>:home , :action=>:update ,:user_id=>params[:user_id] } do |f| %>
  
  <%= f.error_messages %>
	
	<fieldset style="width:990px;border: 2px solid #000;">
  		<legend>Personel detail</legend>
  <p>
  	<%= f.label :name, "Name" %><br />
    <%= f.text_field :name ,:size=>20 , :id=>'name_id'%><span id="nameerror"></span>
  </p>
  <p>
    <%= f.label :email, "Email Address" %><br />
    <%= f.text_field :email , :size=>20 ,:id=>"email_id"%><span id="emailerror"></span>
  </p>
  <p>
  	<%= f.label :dob, "Date Of Birth" %><br />
    <%=f.text_field :dob , :size=>20 , :id=>"dateid" %><span id="dateerror"></span>
  </p>
  
  <p>
  	<%= f.label :age, "Age" %><br />
	<%=f.text_field :age ,:size=>2 , :id=>'age_id' , :maxlength=>2, :disabled=>true%>
  </p>
  
  <p>
  	<%= f.label :gender, "Gender" %><br />
	<%= f.radio_button :gender , 'male' , :checked=>@user.gender==true%>Male
	<%= f.radio_button :gender , 'female' , :checked=>@user.gender==false%>Female
  </p>
  
  <p>
  	<%= f.label :mobile, "Mobile" %><br />
    <%= f.text_field :mobile ,:size=>20 , :id=>'mobile_id',:maxlength=>11 %><span id="mobileerror"></span>
  </p>
  <p>
  	<%= f.label :qualification, "Qualification" %><br />
    <%= f.text_field :qualification ,:size=>20 , :id=>'qualification_id',:maxlength=>50 %><span id="qualerror"></span>
  </p>
  <p>
  	<%= f.label :language_id, "Experiance/Known Language" %><br />
    <%= f.collection_select :language_id, Language.all, :id, :name, :prompt => "Select a Language" %>
  </p>
  <p>
  	<%= f.label :occupation, "Occupation" %><br />
    <%= f.text_field :occupation ,:size=>20 , :id=>'occupation_id',:maxlength=>50 %><span id="occuperror"></span>
  </p>
  <p>
  	<%= f.label :address, "Address" %><br />
    <%= f.text_area :address ,:rows=>4,:cols=>20 , :id=>'address_id'%><span id="addresserror"></span>
  </p>
  
  <p>
  	<%= f.label :relationship, "Relationship" %><br />
    <%=f.text_field :relationship ,:size=>20 , :id=>'relationship_id'%><span id="relationshiperror"></span>
  </p>
  
  <p>
  	<%= f.label :comment, "Comments" %><br />
    <%=f.text_field :comment ,:size=>20 , :id=>'comment_id'%>
  </p>
  <p id="show_msg"><%= f.submit "Sign up" %><%=link_to "Close" , :controller=>:home,:action=>:index %> </p>
  </fieldset>
<% end %>
</br>
<script>

	var name = new LiveValidation( "name_id",{ validMessage: "",insertAfterWhatNode: "nameerror"});
	name.add( Validate.Presence,{failureMessage: "Name can't be blank"}  ); 
	name.add( Validate.Exclusion, { within: [ '1' , '2', '3','4','5','6','7','8','9','0'],partialMatch: true,failureMessage: "Numbers not allowed"});

	var date = new LiveValidation( "dateid",{ validMessage: "",insertAfterWhatNode: "dateerror"});
	date.add( Validate.Presence,{failureMessage: "Date can't be blank"}  ); 

	var mobile = new LiveValidation( "mobile_id",{ validMessage: "",insertAfterWhatNode: "mobileerror"});
	mobile.add( Validate.Presence,{failureMessage: "Mobile can't be blank"}  );
	mobile.add( Validate.Numericality,{failureMessage: "Must be number"}  );
	mobile.add(Validate.Length, { minimum: 10, maximum: 11 },{failureMessage: "Enter valid mobile number"}  );
	
	var email = new LiveValidation('email_id',{ validMessage: "",insertAfterWhatNode: "emailerror"});
	email.add( Validate.Presence,{failureMessage: "Email can't be blank"}  );
	email.add( Validate.Email,{failureMessage: "Enter valid email"}  );
	email.add(Validate.Length, { minimum: 10, maximum: 30 },{failureMessage: "Enter valid email"}  );
	
	var address = new LiveValidation('address_id',{ validMessage: "",insertAfterWhatNode: "addresserror"});
	address.add( Validate.Presence,{failureMessage: "Address can't be blank"}  );
	
	var relation = new LiveValidation('relationship_id',{ validMessage: "",insertAfterWhatNode: "relationshiperror"});
	relation.add( Validate.Presence,{failureMessage: "Hey! , Relationship can't be blank"}  );

	var qual = new LiveValidation('qualification_id',{ validMessage: "",insertAfterWhatNode: "qualerror"});
	qual.add( Validate.Presence,{failureMessage: "Qualication can't be blank"}  );
	
	var occu = new LiveValidation('occupation_id',{ validMessage: "",insertAfterWhatNode: "occuperror"});
	occu.add( Validate.Presence,{failureMessage: "Occupation can't be blank"}  );
	$('#dateid').change( function() {
		var curr = new Date();
		var cyear=curr.getFullYear();
		if ($('#dateid').datepicker('getDate') != null) {  
           var dob = $('#dateid').datepicker('getDate');
		   var byear=dob.getFullYear();  
         }
		 $('#age_id').val(cyear-byear);
	});
	
	$(document).ready(function(){
		$( '#dateid').datepicker({ buttonImage: '/images/cal.gif' , buttonImageOnly: true , showOn: 'both' , dateFormat: 'dd-mm-yy'  , appendText: '(dd-mm-yyyy)', changeMonth: true ,changeYear: true ,yearRange: '1980:2000'});
	});
	
</script>